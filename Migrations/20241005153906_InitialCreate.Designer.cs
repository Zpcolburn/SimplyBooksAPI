// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimplyBooksAPI;

#nullable disable

namespace SimplyBooksAPI.Migrations
{
    [DbContext(typeof(SimplyBooksAPIDbContext))]
    [Migration("20241005153906_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimplyBooksAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Favorite")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ta@ta.com",
                            Favorite = false,
                            FirstName = "Tomi",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/1/17/Tomi_Adeyemi_2020.JPG",
                            LastName = "Adeyemi",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ba@obama.com",
                            Favorite = false,
                            FirstName = "Barack",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/8/8d/President_Barack_Obama.jpg",
                            LastName = "Obama",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 3,
                            Email = "hz@zinn.com",
                            Favorite = false,
                            FirstName = "Howard",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/e/ef/Howard_Zinn%2C_2009_%28cropped%29.jpg",
                            LastName = "Zinn",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 4,
                            Email = "at@thomas.com",
                            Favorite = false,
                            FirstName = "Angie",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/a/a1/Angie_thomas_9022008.jpg",
                            LastName = "Thomas",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 5,
                            Email = "cw@whithead.com",
                            Favorite = false,
                            FirstName = "Colson",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/5/5c/Colson_Whitehead_BBF_2011_Shankbone.JPG",
                            LastName = "Whitehead",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 6,
                            Email = "mk@kendall.com",
                            Favorite = false,
                            FirstName = "Mikki",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/1/17/Author%2C_activist%2C_and_cultural_critic_Mikki_Kendall.jpg",
                            LastName = "Kendall",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 7,
                            Email = "lm@lm.com",
                            Favorite = false,
                            FirstName = "L.L",
                            Image = "https://mpd-biblio-authors.imgix.net/200066919.jpg?fit=crop&crop=faces&w=870&h=870",
                            LastName = "McKinney",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 8,
                            Email = "jb@baldwin.com",
                            Favorite = false,
                            FirstName = "James",
                            Image = "https://upload.wikimedia.org/wikipedia/commons/3/37/James_Baldwin_33_Allan_Warren.jpg",
                            LastName = "Baldwin",
                            UserId = "1007"
                        });
                });

            modelBuilder.Entity("SimplyBooksAPI.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<bool>("Sale")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 101,
                            AuthorId = 1,
                            Description = "",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/91+NBrXG-PL.jpg",
                            Price = 24.99m,
                            Sale = false,
                            Title = "A Promised Land",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 102,
                            AuthorId = 2,
                            Description = "",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/A1agLFsWkOL.jpg",
                            Price = 12.99m,
                            Sale = true,
                            Title = "Children of Blood and Bone",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 103,
                            AuthorId = 3,
                            Description = "",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/51529Lfc2ML.jpg",
                            Price = 30.00m,
                            Sale = false,
                            Title = "A People's History of the United States of America",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 104,
                            AuthorId = 4,
                            Description = "",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/81rRRmZZvZL.jpg",
                            Price = 15.89m,
                            Sale = false,
                            Title = "Concrete Rose",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 105,
                            AuthorId = 5,
                            Description = "",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/A1Cu4ywUeyL.jpg",
                            Price = 25.00m,
                            Sale = true,
                            Title = "The Underground Railroad",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 106,
                            AuthorId = 6,
                            Description = "",
                            Image = "https://res.cloudinary.com/bloomsbury-atlas/image/upload/w_360,c_scale/jackets/9781526622402.jpg",
                            Price = 12.99m,
                            Sale = true,
                            Title = "Hood Feminism",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 107,
                            AuthorId = 7,
                            Description = "",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/81Uf1dTjfQL.jpg",
                            Price = 15.00m,
                            Sale = false,
                            Title = "A Blade So Black",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 108,
                            AuthorId = 8,
                            Description = "",
                            Image = "https://m.media-amazon.com/images/I/51BZdlchEsL.jpg",
                            Price = 14.99m,
                            Sale = false,
                            Title = "A Dream So Dark",
                            UserId = "1007"
                        },
                        new
                        {
                            Id = 109,
                            AuthorId = 8,
                            Description = "",
                            Image = "https://images-na.ssl-images-amazon.com/images/I/61GSqXVhhKL.jpg",
                            Price = 12.00m,
                            Sale = false,
                            Title = "The Fire Next Time",
                            UserId = "1007"
                        });
                });

            modelBuilder.Entity("SimplyBooksAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1007",
                            FirstName = "Zach",
                            LastName = "Colburn"
                        });
                });

            modelBuilder.Entity("SimplyBooksAPI.Models.Book", b =>
                {
                    b.HasOne("SimplyBooksAPI.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("SimplyBooksAPI.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
